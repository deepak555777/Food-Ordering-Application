{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deepa\\\\Documents\\\\Udemy Learning\\\\FoodOrderingApp\\\\src\\\\Components\\\\Meals\\\\AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Classes from './AvailableMeals.module.css';\nimport MealItem from './MealItem/MealItem';\nimport Card from '../UI/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AvailableMeals() {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://food-application-1a595-default-rtdb.firebaseio.com/mals.json');\n      if (!response.ok) {\n        throw new Error(\"Http Error\");\n      }\n      const responseData = await response.json();\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: Classes.mealsLoading,\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: Classes.mealsError,\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this);\n  }\n  const mealList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 40\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(AvailableMeals, \"e+R0Vbj4amwdVKKfS5xooH5OcXI=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["React","useEffect","useState","Classes","MealItem","Card","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","mealsLoading","mealsError","mealList","map","meal"],"sources":["C:/Users/deepa/Documents/Udemy Learning/FoodOrderingApp/src/Components/Meals/AvailableMeals.js"],"sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport Classes from './AvailableMeals.module.css'\r\nimport MealItem from './MealItem/MealItem'\r\nimport Card from '../UI/Card'\r\n\r\nfunction AvailableMeals() {\r\n  const [meals, setMeals] = useState([])\r\n  const[isLoading,setIsLoading] = useState(true)\r\n  const [httpError,setHttpError] = useState()\r\n\r\n     useEffect(() => {\r\n      const fetchMeals = async ()=>{\r\n        const response = await fetch('https://food-application-1a595-default-rtdb.firebaseio.com/mals.json')\r\n        if(!response.ok){\r\n          throw new Error(\"Http Error\")\r\n        }\r\n          const responseData = await response.json()\r\n        \r\n       \r\n        const loadedMeals=[];\r\n        for(const key in responseData){\r\n        loadedMeals.push({\r\n          id : key,\r\n          name : responseData[key].name,\r\n          description: responseData[key].description,\r\n          price : responseData[key].price,\r\n        })}\r\n\r\n       setMeals(loadedMeals)\r\n       setIsLoading(false)\r\n      }\r\n\r\n        fetchMeals().catch((error) => {\r\n          setIsLoading(false);\r\n          setHttpError(error.message);\r\n        })\r\n\r\n      },[])\r\n\r\n\r\n     if(isLoading){\r\n      return(\r\n      <section>\r\n        <p className={Classes.mealsLoading}>Loading...</p>\r\n      </section>\r\n      )\r\n    }\r\n    \r\n    if(httpError){\r\n      return(\r\n        <section>\r\n          <p className={Classes.mealsError}>{httpError}</p>\r\n        </section>\r\n      )\r\n    }\r\n\r\n     \r\n    const mealList = meals.map((meal)=><MealItem\r\n    id={meal.id}\r\n      key={meal.id} \r\n    name={meal.name}\r\n    description={meal.description}\r\n    price={meal.price}\r\n    /> )\r\n\r\n\r\n  return (\r\n    <div className={Classes.meals}>\r\n        <Card>\r\n<ul>{mealList}</ul>\r\n</Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AvailableMeals"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAC9C,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,IAAI,MAAM,YAAY;AAAA;AAE7B,SAASC,cAAc,GAAG;EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAK,CAACO,SAAS,EAACC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACS,SAAS,EAACC,YAAY,CAAC,GAAGV,QAAQ,EAAE;EAExCD,SAAS,CAAC,MAAM;IACf,MAAMY,UAAU,GAAG,YAAU;MAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sEAAsE,CAAC;MACpG,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;QACd,MAAM,IAAIC,KAAK,CAAC,YAAY,CAAC;MAC/B;MACE,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAG5C,MAAMC,WAAW,GAAC,EAAE;MACpB,KAAI,MAAMC,GAAG,IAAIH,YAAY,EAAC;QAC9BE,WAAW,CAACE,IAAI,CAAC;UACfC,EAAE,EAAGF,GAAG;UACRG,IAAI,EAAGN,YAAY,CAACG,GAAG,CAAC,CAACG,IAAI;UAC7BC,WAAW,EAAEP,YAAY,CAACG,GAAG,CAAC,CAACI,WAAW;UAC1CC,KAAK,EAAGR,YAAY,CAACG,GAAG,CAAC,CAACK;QAC5B,CAAC,CAAC;MAAA;MAEHlB,QAAQ,CAACY,WAAW,CAAC;MACrBV,YAAY,CAAC,KAAK,CAAC;IACpB,CAAC;IAECG,UAAU,EAAE,CAACc,KAAK,CAAEC,KAAK,IAAK;MAC5BlB,YAAY,CAAC,KAAK,CAAC;MACnBE,YAAY,CAACgB,KAAK,CAACC,OAAO,CAAC;IAC7B,CAAC,CAAC;EAEJ,CAAC,EAAC,EAAE,CAAC;EAGN,IAAGpB,SAAS,EAAC;IACZ,oBACA;MAAA,uBACE;QAAG,SAAS,EAAEN,OAAO,CAAC2B,YAAa;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QAC1C;EAEZ;EAEA,IAAGnB,SAAS,EAAC;IACX,oBACE;MAAA,uBACE;QAAG,SAAS,EAAER,OAAO,CAAC4B,UAAW;QAAA,UAAEpB;MAAS;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACzC;EAEd;EAGA,MAAMqB,QAAQ,GAAGzB,KAAK,CAAC0B,GAAG,CAAEC,IAAI,iBAAG,QAAC,QAAQ;IAC5C,EAAE,EAAEA,IAAI,CAACX,EAAG;IAEZ,IAAI,EAAEW,IAAI,CAACV,IAAK;IAChB,WAAW,EAAEU,IAAI,CAACT,WAAY;IAC9B,KAAK,EAAES,IAAI,CAACR;EAAM,GAHXQ,IAAI,CAACX,EAAE;IAAA;IAAA;IAAA;EAAA,QAIZ,CAAE;EAGN,oBACE;IAAK,SAAS,EAAEpB,OAAO,CAACI,KAAM;IAAA,uBAC1B,QAAC,IAAI;MAAA,uBACb;QAAA,UAAKyB;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA;EACZ;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GApEQ1B,cAAc;AAAA,KAAdA,cAAc;AAsEvB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}